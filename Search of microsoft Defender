Scenario: Investigate using MailItemsAccessed in a healthcare setting
In response to observed unusual access patterns to electronic health records (EHR) at a network of healthcare facilities, the compliance team uses Microsoft Purview Audit (Premium) to thoroughly investigate and ensure compliance with health data protection laws. Here's how they proceed:

Setup and data collection:
Start by identifying the mailboxes linked to users who have access to sensitive patient data and define the time period that suspicious activities were detected.
Use the Search-UnifiedAuditLog or Search-MailboxAuditLog cmdlets to pull records of MailItemsAccessed during the suspected period.

Search-UnifiedAuditLog -StartDate "2020-01-06" -EndDate "2020-01-20" -UserIds "user1, user2" -Operations MailItemsAccessed -ResultSize 1000

Check for throttling:

Given the high sensitivity of the data, check for any signs of throttling, which might suggest periods where logging was paused and unauthorized access might be unrecorded.
Search-UnifiedAuditLog -StartDate "2020-01-06" -EndDate "2020-01-20" -UserIds "user1, user2" -Operations MailItemsAccessed -ResultSize 1000 | Where {$_.AuditData -like '*"IsThrottled","Value":"True"*'} | FL

Analyze sync and bind activities:

Investigate the extent of data access, focusing on whether entire folders containing sensitive patient information were downloaded (sync) or specific sensitive emails were opened (bind).
Sync activity check:
Search-UnifiedAuditLog -StartDate "2020-01-06" -EndDate "2020-02-20" -UserIds "user1, user2" -Operations MailItemsAccessed -ResultSize 1000 | Where {$_.AuditData -like '*"MailAccessType","Value":"Sync"*'} | FL

Example: Export SharePoint audit records
Imagine the IT compliance team at your healthcare network needs to review SharePoint sharing operations as part of an audit on how health records are accessed and shared. Here's how they could use PowerShell to capture and analyze these activities:

Search for SharePoint sharing operations within a specific period by running:
$auditlog = Search-UnifiedAuditLog -StartDate 06/01/2019 -EndDate 06/30/2019 -RecordType SharePointSharingOperation

Advanced management using PowerShell
PowerShell commands provide flexibility for creating, viewing, editing, and deleting retention policies, especially for complex setups. For policy management in PowerShell use Security & Compliance PowerShell.

Create policies in PowerShell using the New-UnifiedAuditLogRetentionPolicy cmdlet. This example creates a policy named "Microsoft Teams Audit Policy" to retain all activities for 10 years with a priority of 100:
New-UnifiedAuditLogRetentionPolicy -Name "Microsoft Teams Audit Policy" -Description "One year retention policy for all Microsoft Teams activities" -RecordTypes MicrosoftTeams -RetentionDuration TenYears -Priority 100



